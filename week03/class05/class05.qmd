---
title: "Class 5: Data Visualization with GGPLOT"
author: "Kyle"
format: html
---

# Our first ggplot

To use the ggplot 2 package I first need to have it installed on my computer.

To install any package we use the `install.packages()` command

Now can I use it? NO! First we need tl call `library(ggplot2)`

```{r}
library(ggplot2)
ggplot()
```
```{r}
mpg
```
Our first plot of displ vs hwy 
All ggplot() graphs are made in the same way.

- data + aes + geoms

```{r}
ggplot(mpg) + 
  aes(x=displ, y=hwy) +
  geom_point()
```
I can add more layers:
Look at the documentation using `?function_name` in order to see what a certain function does and what arguments it takes.
```{r}
ggplot(mpg) + 
  aes(x=displ, y=hwy) +
  geom_point() +
  geom_smooth(method = lm, se = FALSE)
```
In order to add labels and a theme for the graph use `labs()` and `theme_bw()`
```{r}
ggplot(cars) +
  aes(x=speed, y=dist) +
  geom_point() +
  geom_smooth(method="lm", se= FALSE) +
  theme_bw()
  
```
# Plot of gene expression data

First read the data from online.
```{r}
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"
genes <- read.delim(url)
head(genes)
```

> Q. How many genes are in this dataset?

```{r}
nrow(genes)
```

What are the colnames?
```{r}
colnames(genes)
```

How to make this into a ggplot?
```{r}
ggplot(genes) +
  aes(x = Condition1, y= Condition2) +
  geom_point();
```

Let's add some color. To tdo this we can add another `aes()` mapping of color to the `State` column in our data
```{r}
p <- ggplot(genes) +
  aes(x = Condition1, y= Condition2, col = State) +
  geom_point();
```
> Q. How many genes are up regulated and down regulated?

```{r}
head(genes)
```

To get at just the State column
`table()` helps summarize data
```{r}
table(genes$State)
```

To find the fraction of total genes up-regulated we can use `round()`
```{r}
round( table(genes$State)/nrow(genes) * 100, 2)
```


In order to change color of the plot can use `scale_color_manual()` 
```{r}
p + scale_color_manual( values=c("blue", "gray", "red"))
```

Lets add some labels to our newly colored graph (Remember: Use `labs()`)

```{r}
p + scale_color_manual( values=c("blue", "gray", "red")) +
  labs(title="Gene Expression Changes Upon Treatment", x="Control (no drug)", y="Drug Treatment")
```


